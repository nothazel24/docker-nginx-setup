services:
  app:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile 
    image: appname-app-image:1.0
    container_name: app-name
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      - ./docker/php-fpm/php.ini:/usr/local/etc/php/conf.d/custom-php.ini:Z
    environment:
      APP_ENV: local
      APP_DEBUG: true

      # Koneksi database untuk Laravel
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-yourdb}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-root}
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:Z
    depends_on:
      - app
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-yourdb}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:Z
    networks:
      - app-network

  adminer:
    image: adminer:latest
    container_name: laravel_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DEFAULT_USER: ${DB_USERNAME:-root}
      ADMINER_DEFAULT_PASSWORD: ${DB_PASSWORD:-root}
    depends_on:
      - mysql
    networks:
      - app-network

  npm:
    image: node:20-alpine
    container_name: laravel_npm
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    ports:
      - "5173:5173"
    tty: true
    networks:
      - app-network

volumes:
  dbdata:
    # Definisikan volume bernama untuk data MySQL

networks:
  app-network:
    driver: bridge
